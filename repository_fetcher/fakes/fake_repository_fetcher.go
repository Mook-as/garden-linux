// This file was generated by counterfeiter
package fakes

import (
	"net/url"
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/repository_fetcher"
)

type FakeRepositoryFetcher struct {
	FetchStub        func(u *url.URL, diskQuota int64) (*repository_fetcher.Image, error)
	fetchMutex       sync.RWMutex
	fetchArgsForCall []struct {
		u         *url.URL
		diskQuota int64
	}
	fetchReturns struct {
		result1 *repository_fetcher.Image
		result2 error
	}
}

func (fake *FakeRepositoryFetcher) Fetch(u *url.URL, diskQuota int64) (*repository_fetcher.Image, error) {
	fake.fetchMutex.Lock()
	fake.fetchArgsForCall = append(fake.fetchArgsForCall, struct {
		u         *url.URL
		diskQuota int64
	}{u, diskQuota})
	fake.fetchMutex.Unlock()
	if fake.FetchStub != nil {
		return fake.FetchStub(u, diskQuota)
	} else {
		return fake.fetchReturns.result1, fake.fetchReturns.result2
	}
}

func (fake *FakeRepositoryFetcher) FetchCallCount() int {
	fake.fetchMutex.RLock()
	defer fake.fetchMutex.RUnlock()
	return len(fake.fetchArgsForCall)
}

func (fake *FakeRepositoryFetcher) FetchArgsForCall(i int) (*url.URL, int64) {
	fake.fetchMutex.RLock()
	defer fake.fetchMutex.RUnlock()
	return fake.fetchArgsForCall[i].u, fake.fetchArgsForCall[i].diskQuota
}

func (fake *FakeRepositoryFetcher) FetchReturns(result1 *repository_fetcher.Image, result2 error) {
	fake.FetchStub = nil
	fake.fetchReturns = struct {
		result1 *repository_fetcher.Image
		result2 error
	}{result1, result2}
}

var _ repository_fetcher.RepositoryFetcher = new(FakeRepositoryFetcher)
