#!/bin/bash

set -e -x

export GARDEN_TEST_GRAPHPATH=/tmp/aufs_mount
mkdir -p $GARDEN_TEST_GRAPHPATH

export GARDEN_TEST_ROOTFS=/opt/warden/rootfs

[ -d /opt/warden/nestable-rootfs ] && export GARDEN_NESTABLE_TEST_ROOTFS=/opt/warden/nestable-rootfs
[ -d /opt/warden/fuse-rootfs ] && export GARDEN_FUSE_TEST_ROOTFS=/opt/warden/fuse-rootfs
[ -d /opt/warden/docker-registry-rootfs ] && export GARDEN_DOCKER_REGISTRY_TEST_ROOTFS=/opt/warden/docker-registry-rootfs
[ -d /opt/warden/docker-registry-v2-rootfs ] && export GARDEN_DOCKER_REGISTRY_V2_TEST_ROOTFS=/opt/warden/docker-registry-v2-rootfs
[ -d /opt/warden/preexisting-users-rootfs ] && export GARDEN_PREEXISTING_USERS_TEST_ROOTFS=/opt/warden/preexisting-users-rootfs
[ -d /opt/warden/empty ] && export GARDEN_EMPTY_TEST_ROOTFS=/opt/warden/empty
root=$(cd $(dirname $BASH_SOURCE)/.. && pwd)
[ -f $root/../garden-integration-tests/resources/dora.tgz ] && export GARDEN_DORA_PATH=$root/../garden-integration-tests/resources/dora.tgz

export PATH=$GOPATH/bin:$PATH

make

go install github.com/onsi/ginkgo/ginkgo

ginkgo -tags daemon -r -p -race -cover -keepGoing -nodes=4 -slowSpecThreshold=15 "$@"

# don't leak coveralls token
set +x

if [ -n "$COVERALLS_TOKEN" ] && [ "$COVERALLS_TOKEN" != "{{coveralls_token}}" ] ; then
  go get github.com/dustin/goveralls

  profiles=$(find . -name '*.coverprofile' | grep -v fake)

  echo mode: set > all.coverprofile
  cat $profiles | grep -v mode: >> all.coverprofile

  goveralls -service drone.io -coverprofile=all.coverprofile $COVERALLS_TOKEN || \
    echo "Coveralls failed. :("
fi
