// This file was generated by counterfeiter
package fake_namespacer

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/old/rootfs_provider"
)

type FakeNamespacer struct {
	NamespaceStub        func(src, dest string) error
	namespaceMutex       sync.RWMutex
	namespaceArgsForCall []struct {
		src  string
		dest string
	}
	namespaceReturns struct {
		result1 error
	}
}

func (fake *FakeNamespacer) Namespace(src string, dest string) error {
	fake.namespaceMutex.Lock()
	fake.namespaceArgsForCall = append(fake.namespaceArgsForCall, struct {
		src  string
		dest string
	}{src, dest})
	fake.namespaceMutex.Unlock()
	if fake.NamespaceStub != nil {
		return fake.NamespaceStub(src, dest)
	} else {
		return fake.namespaceReturns.result1
	}
}

func (fake *FakeNamespacer) NamespaceCallCount() int {
	fake.namespaceMutex.RLock()
	defer fake.namespaceMutex.RUnlock()
	return len(fake.namespaceArgsForCall)
}

func (fake *FakeNamespacer) NamespaceArgsForCall(i int) (string, string) {
	fake.namespaceMutex.RLock()
	defer fake.namespaceMutex.RUnlock()
	return fake.namespaceArgsForCall[i].src, fake.namespaceArgsForCall[i].dest
}

func (fake *FakeNamespacer) NamespaceReturns(result1 error) {
	fake.NamespaceStub = nil
	fake.namespaceReturns = struct {
		result1 error
	}{result1}
}

var _ rootfs_provider.Namespacer = new(FakeNamespacer)
