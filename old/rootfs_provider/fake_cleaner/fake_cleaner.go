// This file was generated by counterfeiter
package fake_cleaner

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/old/rootfs_provider"
)

type FakeCleaner struct {
	CleanStub        func(id string) error
	cleanMutex       sync.RWMutex
	cleanArgsForCall []struct {
		id string
	}
	cleanReturns struct {
		result1 error
	}
}

func (fake *FakeCleaner) Clean(id string) error {
	fake.cleanMutex.Lock()
	fake.cleanArgsForCall = append(fake.cleanArgsForCall, struct {
		id string
	}{id})
	fake.cleanMutex.Unlock()
	if fake.CleanStub != nil {
		return fake.CleanStub(id)
	} else {
		return fake.cleanReturns.result1
	}
}

func (fake *FakeCleaner) CleanCallCount() int {
	fake.cleanMutex.RLock()
	defer fake.cleanMutex.RUnlock()
	return len(fake.cleanArgsForCall)
}

func (fake *FakeCleaner) CleanArgsForCall(i int) string {
	fake.cleanMutex.RLock()
	defer fake.cleanMutex.RUnlock()
	return fake.cleanArgsForCall[i].id
}

func (fake *FakeCleaner) CleanReturns(result1 error) {
	fake.CleanStub = nil
	fake.cleanReturns = struct {
		result1 error
	}{result1}
}

var _ rootfs_provider.Cleaner = new(FakeCleaner)
