// This file was generated by counterfeiter
package fake_graph

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/rootfs_provider"
	"github.com/docker/docker/image"
)

type FakeGraph struct {
	GetStub        func(id string) (*image.Image, error)
	getMutex       sync.RWMutex
	getArgsForCall []struct {
		id string
	}
	getReturns struct {
		result1 *image.Image
		result2 error
	}
	IsParentStub        func(id string) bool
	isParentMutex       sync.RWMutex
	isParentArgsForCall []struct {
		id string
	}
	isParentReturns struct {
		result1 bool
	}
}

func (fake *FakeGraph) Get(id string) (*image.Image, error) {
	fake.getMutex.Lock()
	fake.getArgsForCall = append(fake.getArgsForCall, struct {
		id string
	}{id})
	fake.getMutex.Unlock()
	if fake.GetStub != nil {
		return fake.GetStub(id)
	} else {
		return fake.getReturns.result1, fake.getReturns.result2
	}
}

func (fake *FakeGraph) GetCallCount() int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return len(fake.getArgsForCall)
}

func (fake *FakeGraph) GetArgsForCall(i int) string {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return fake.getArgsForCall[i].id
}

func (fake *FakeGraph) GetReturns(result1 *image.Image, result2 error) {
	fake.GetStub = nil
	fake.getReturns = struct {
		result1 *image.Image
		result2 error
	}{result1, result2}
}

func (fake *FakeGraph) IsParent(id string) bool {
	fake.isParentMutex.Lock()
	fake.isParentArgsForCall = append(fake.isParentArgsForCall, struct {
		id string
	}{id})
	fake.isParentMutex.Unlock()
	if fake.IsParentStub != nil {
		return fake.IsParentStub(id)
	} else {
		return fake.isParentReturns.result1
	}
}

func (fake *FakeGraph) IsParentCallCount() int {
	fake.isParentMutex.RLock()
	defer fake.isParentMutex.RUnlock()
	return len(fake.isParentArgsForCall)
}

func (fake *FakeGraph) IsParentArgsForCall(i int) string {
	fake.isParentMutex.RLock()
	defer fake.isParentMutex.RUnlock()
	return fake.isParentArgsForCall[i].id
}

func (fake *FakeGraph) IsParentReturns(result1 bool) {
	fake.IsParentStub = nil
	fake.isParentReturns = struct {
		result1 bool
	}{result1}
}

var _ rootfs_provider.Graph = new(FakeGraph)
