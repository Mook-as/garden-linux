// This file was generated by counterfeiter
package fake_remover

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/layercake"
	"github.com/cloudfoundry-incubator/garden-linux/resource_pool"
)

type FakeRemover struct {
	RemoveStub        func(id layercake.IDer) error
	removeMutex       sync.RWMutex
	removeArgsForCall []struct {
		id layercake.IDer
	}
	removeReturns struct {
		result1 error
	}
}

func (fake *FakeRemover) Remove(id layercake.IDer) error {
	fake.removeMutex.Lock()
	fake.removeArgsForCall = append(fake.removeArgsForCall, struct {
		id layercake.IDer
	}{id})
	fake.removeMutex.Unlock()
	if fake.RemoveStub != nil {
		return fake.RemoveStub(id)
	} else {
		return fake.removeReturns.result1
	}
}

func (fake *FakeRemover) RemoveCallCount() int {
	fake.removeMutex.RLock()
	defer fake.removeMutex.RUnlock()
	return len(fake.removeArgsForCall)
}

func (fake *FakeRemover) RemoveArgsForCall(i int) layercake.IDer {
	fake.removeMutex.RLock()
	defer fake.removeMutex.RUnlock()
	return fake.removeArgsForCall[i].id
}

func (fake *FakeRemover) RemoveReturns(result1 error) {
	fake.RemoveStub = nil
	fake.removeReturns = struct {
		result1 error
	}{result1}
}

var _ resource_pool.Remover = new(FakeRemover)
