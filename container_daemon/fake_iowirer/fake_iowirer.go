// This file was generated by counterfeiter
package fake_iowirer

import (
	"os"
	"os/exec"
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/container_daemon"
)

type FakeIOWirer struct {
	WireStub        func(cmd *exec.Cmd) ([]*os.File, error)
	wireMutex       sync.RWMutex
	wireArgsForCall []struct {
		cmd *exec.Cmd
	}
	wireReturns struct {
		result1 []*os.File
		result2 error
	}
}

func (fake *FakeIOWirer) Wire(cmd *exec.Cmd) ([]*os.File, error) {
	fake.wireMutex.Lock()
	fake.wireArgsForCall = append(fake.wireArgsForCall, struct {
		cmd *exec.Cmd
	}{cmd})
	fake.wireMutex.Unlock()
	if fake.WireStub != nil {
		return fake.WireStub(cmd)
	} else {
		return fake.wireReturns.result1, fake.wireReturns.result2
	}
}

func (fake *FakeIOWirer) WireCallCount() int {
	fake.wireMutex.RLock()
	defer fake.wireMutex.RUnlock()
	return len(fake.wireArgsForCall)
}

func (fake *FakeIOWirer) WireArgsForCall(i int) *exec.Cmd {
	fake.wireMutex.RLock()
	defer fake.wireMutex.RUnlock()
	return fake.wireArgsForCall[i].cmd
}

func (fake *FakeIOWirer) WireReturns(result1 []*os.File, result2 error) {
	fake.WireStub = nil
	fake.wireReturns = struct {
		result1 []*os.File
		result2 error
	}{result1, result2}
}

var _ container_daemon.IOWirer = new(FakeIOWirer)
